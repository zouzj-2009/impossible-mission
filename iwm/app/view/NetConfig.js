/*
 * File: app/view/NetConfig.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.NetConfig', {
    extend: 'Ext.form.Panel',
    alias: 'widget.netconfig',
    requires: [
        'MyApp.view.IpField',
        'MyApp.view.NetMaskField'
    ],

    minHeight: 300,
    layout: {
        type: 'border'
    },
    bodyPadding: 10,
    title: 'Network Configuration',
    model: 'LunMap',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    hideCollapseTool: false,
                    overlapHeader: false,
                    preventHeader: false,
                    title: 'NIC & IP Address',
                    titleCollapse: false,
                    store: 'netconfig',
                    region: 'center',
                    split: true,
                    viewConfig: {

                    },
                    selModel: Ext.create('Ext.selection.CheckboxModel', {

                    }),
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    disabled: true,
                                    itemId: 'delete',
                                    text: 'Delete',
                                    listeners: {
                                        click: {
                                            fn: me.onDeleteClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'refresh',
                                    text: 'Refresh',
                                    listeners: {
                                        click: {
                                            fn: me.onRefreshClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    listeners: {
                        selectionchange: {
                            fn: me.onGridpanelSelectionChange,
                            scope: me
                        }
                    },
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'dev',
                            text: 'Dev'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'physicdevice',
                            text: 'Physicdevice'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'ipaddress',
                            text: 'Ipaddress'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'ipv6address',
                            text: 'Ipv6address'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'netmask',
                            text: 'Netmask'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'broadcast',
                            text: 'Broadcast'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    minWidth: 280,
                    width: 150,
                    autoScroll: true,
                    region: 'west',
                    split: true,
                    items: [
                        {
                            xtype: 'fieldset',
                            padding: 5,
                            collapsed: true,
                            collapsible: true,
                            title: 'GW & DNS',
                            items: [
                                {
                                    xtype: 'ipfield',
                                    name: 'defualtgateway1',
                                    fieldLabel: 'Default GW1'
                                },
                                {
                                    xtype: 'ipfield',
                                    name: 'defualtgateway2',
                                    fieldLabel: 'Default GW2'
                                },
                                {
                                    xtype: 'ipfield',
                                    name: 'dns1',
                                    fieldLabel: 'DNS1'
                                },
                                {
                                    xtype: 'ipfield',
                                    name: 'dns2',
                                    fieldLabel: 'DNS2'
                                },
                                {
                                    xtype: 'button',
                                    text: 'Save'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            padding: 5,
                            collapsed: false,
                            collapsible: true,
                            title: 'IP Address Configuration',
                            items: [
                                {
                                    xtype: 'combobox',
                                    name: 'dev',
                                    fieldLabel: 'Device',
                                    anchor: '100%'
                                },
                                {
                                    xtype: 'ipfield',
                                    name: 'ipaddress'
                                },
                                {
                                    xtype: 'netmaskfield',
                                    name: 'netmask'
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'add',
                                    margin: 5,
                                    minWidth: 80,
                                    autoWidth: true,
                                    text: 'Add New',
                                    formBind: true,
                                    listeners: {
                                        click: {
                                            fn: me.onAddClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    itemId: 'update',
                                    text: 'Update',
                                    listeners: {
                                        click: {
                                            fn: me.onUpdateClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onDeleteClick: function(button, e, options) {
        var records = this.down('gridpanel').getSelectionModel().getSelection();
        this.down('gridpanel').store.remove(records);
    },

    onRefreshClick: function(button, e, options) {
        this.reloaded = true;
        this.down('gridpanel').store.load();
    },

    onGridpanelSelectionChange: function(tablepanel, selections, options) {
        if (selections.length==1){
            this.loadRecord(selections[0]);
            this.down('#delete').enable();
        }else{
            this.down('#delete').disable();
        }


    },

    onAddClick: function(button, e, options) {

        var store = this.down('gridpanel').store;
        if (this.getForm().isValid()){
            var v = this.getForm().getFieldValues();
            store.add(v);
            store.sync();
        }

    },

    onUpdateClick: function(button, e, options) {
        this.getForm().updateRecord();
        this.down('gridpanel').store.sync();
    },

    setLocale: function(lang) {
        switch (lang){
            case 'zh-cn':
            this.down('#add').text = '增加';
            break;
            case 'en-us':
            break;
            default:
            this.down('#add').text = 'Delete';
        }
    }

});