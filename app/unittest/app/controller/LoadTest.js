/*
 * File: app/controller/LoadTest.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('app_unittest.controller.LoadTest', {
    extend: 'Ext.app.Controller',

    onButtonClick: function(button, e, options) {
        var app = this.application,
            r = app.uselibs,
            v = [],
            em = button.up().down('#multiinstance').getValue(),
            tp = Ext.getCmp('testpanel');
        //if (!em) button.disable();
        if (!tp) return;
        if (!Ext.isArray(r)) return;
        Ext.Array.forEach(r, function(cn){
            var c = app.getController(cn);
            var views = c.views;
            if (!Ext.isArray(views)) return;
            Ext.Array.forEach(views, function(view){
                var itemId = view.replace(/\.view\./, '_');
                if (!em && tp.down('#'+itemId)){
                    alert(view+': already created.');
                    return;
                }
                var vv = c.getView(view).create({itemId:em?null:itemId, closable:true});
                if (!vv){
                    alert(view+' not found!');
                    return;
                }
                tp.add(vv);
            });
        });
    },

    onComboboxBeforeRender: function(abstractcomponent, options) {
        var c = abstractcomponent,
            store = c.getStore();
        Ext.Array.forEach(this.application.uselibs, function(unit){
            store.add({text:unit});
        });

    },

    onComboboxChange: function(field, newValue, oldValue, options) {
        if (!newValue) return;
        var tp =Ext.getCmp('testpanel');
        var c = this.application.getController(newValue),
            em = field.up().down('#multiinstance').getValue();
        if (!c) return;
        var views = c.views;
        if (!Ext.isArray(views)) return;
        Ext.Array.forEach(views, function(view){
            var itemId = view.replace(/\.view\./, '_');
            if (!em && tp.down('#'+itemId)){
                alert(view+': already created.');
                return;
            }
            var vv = c.getView(view).create({itemId:em?null:itemId, closable:true});
            if (!vv){
                alert(view+' not found!');
                return;
            }
            tp.add(vv);
        });
    },

    init: function() {
        this.control({
            "button#loadtest": {
                click: this.onButtonClick
            },
            "combobox#testunitselector": {
                beforerender: this.onComboboxBeforeRender,
                change: this.onComboboxChange
            }
        });

    }

});
