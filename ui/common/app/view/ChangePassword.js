/*
 * File: app/view/ChangePassword.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ui_common.view.ChangePassword', {
    extend: 'Ext.window.Window',
    alias: 'widget.changepassword',

    autoShow: true,
    height: 264,
    width: 412,
    layout: {
        type: 'fit'
    },
    bodyBorder: false,
    closeAction: 'hide',
    iconCls: 'login',
    title: 'Change Password$',
    defaultFocus: 'upload',
    modal: true,
    user: 'unknown',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'form',
                    border: 0,
                    padding: 10,
                    layout: {
                        align: 'center',
                        pack: 'center',
                        type: 'vbox'
                    },
                    bodyCls: 'x-border-layout-ct',
                    bodyPadding: 20,
                    databind: {
                        model: 'ui_common.model.login'
                    },
                    items: [
                        {
                            xtype: 'displayfield',
                            itemId: 'logon',
                            width: 300,
                            name: 'logingon',
                            value: 'localhost',
                            fieldLabel: 'Loging on',
                            labelAlign: 'right',
                            margins: '0 0 5 0'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'username',
                            width: 300,
                            name: 'username',
                            readOnly: true,
                            fieldLabel: 'Username',
                            labelAlign: 'right',
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            width: 300,
                            inputType: 'password',
                            name: 'password',
                            fieldLabel: 'Old Password',
                            labelAlign: 'right',
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'newpassword',
                            width: 300,
                            inputType: 'password',
                            name: 'newpassword',
                            fieldLabel: 'New password',
                            labelAlign: 'right',
                            allowBlank: false
                        },
                        {
                            xtype: 'textfield',
                            validator: function(value) {
                                var newpass = this.up().down('#newpassword').getValue();
                                if (value != newpass) return false;
                                return true;
                            },
                            width: 300,
                            inputType: 'password',
                            invalidText: 'Re-typing mismatched with new password',
                            name: 'retyping',
                            fieldLabel: 'Re-typing',
                            labelAlign: 'right'
                        },
                        {
                            xtype: 'button',
                            onactiondone: function(success, action, model, values, controller, dbcfg) {
                                if (success) dbcfg.dbc.up('window').close();
                            },
                            itemId: 'upload',
                            minWidth: 120,
                            iconCls: 'x-btn-tool-login',
                            text: 'Change$',
                            usingaction: 'update',
                            margins: '15 0 20 0',
                            formBind: true
                        }
                    ]
                }
            ],
            listeners: {
                show: {
                    fn: me.onWindowShow,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onWindowShow: function(abstractcomponent, options) {
        var w = abstractcomponent,
            logon = '';
        if (w.logonip) 
        logon += w.logonip; 
        else 
        logon += location.host;
        if (w.logonhost) logon += '('+w.logonhost+')';
        w.down('#logon').setValue(logon);
        w.down('#username').setValue(w.user);

    }

});